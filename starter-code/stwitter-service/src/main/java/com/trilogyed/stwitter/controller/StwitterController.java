package com.trilogyed.stwitter.controller;

import com.trilogyed.stwitter.ViewModel.PostViewModel;
import com.trilogyed.stwitter.service.ServiceLayer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

@RestController
public class StwitterController {
    @Autowired
    ServiceLayer service;

    public StwitterController(ServiceLayer service) {
        this.service = service;
    }

//    Create Post
//===========
//    URI: /posts
//    HTTP Method: POST
//    RequestBody: Post data (minus ID)
//    ResponseBody: Post data (including autogenerated ID)

    @RequestMapping(value = "/posts", method = RequestMethod.POST)
    @ResponseStatus(HttpStatus.CREATED)
    public PostViewModel createPost(@RequestBody @Valid PostViewModel postViewModel) {
        return service.createPost(postViewModel);
    }


//    Get Post
//========
//    URI: /posts/{id}
//    HTTP Method: GET
//    RequestBody: None
//    ResponseBody: Post data

    @RequestMapping(value = "/posts/{id}", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public PostViewModel getPost(@PathVariable int id) {
        PostViewModel post = service.getPostById(id);
        if (post == null)
            throw new IllegalArgumentException("Post does not exist for id " + id);
        return post;
    }

//    Get Posts for Poster
//====================
//    URI: /posts/user/{poster_name}
//    HTTP Method: GET
//    RequestBody: None
//    ResponseBody: Array of Post data

    @RequestMapping(value = "/posts/{poster_name}", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public List<PostViewModel> getPostsByPosterName(@PathVariable String posterName) {
        List<PostViewModel> postList = service.getPostsByPosterName(posterName);
        if (postList == null)
            throw new IllegalArgumentException("Post does not exist for id " + posterName);
        return postList;
    }
}
